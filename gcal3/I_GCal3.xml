<?xml version="1.0"?>
<implementation>
<files>GCal3.lua</files>
  <incoming>
   <lua>
      luup.log("GCAL gc_ - Incoming should not be called on this device")
   </lua>
  </incoming>
  <startup>GCalStartup</startup>
  <actionList>
  <action>
     <serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
     <name>SetArmed</name>
     <run>
      local newArmedValue
      if (lul_settings.newArmedValue == "0") then
        newArmedValue = "0"
      else
        newArmedValue = luup.variable_get(SECURITY_SID, "Armed", lul_device)
        if newArmedValue == "0" then
          newArmedValue = "1"
        else
          newArmedValue = "0"
        end
      end
      luup.variable_set(SECURITY_SID, "Armed", newArmedValue, lul_device)
     </run>
  </action>
  <action>
     <serviceId>urn:srs-com:serviceId:GCalIII</serviceId>
     <name>GCalCheck</name>
     <run>
        luup.log(string.format("GCAL: Manual Check Calendar"))
        luup.task(tostring("Manual Check Calendar"), 1, GC.description, GC.handle)
        GC.interrupt = GC.interrupt + 1
        GCalTimer(json.encode({"manual", "", GC.interrupt}))
     </run>
  </action>
  <action>
     <serviceId>urn:srs-com:serviceId:GCalIII</serviceId>
     <name>SetGCalCalendarID</name>
     <run>
       if (lul_settings.new_gc_CalendarID == nil) then
         DEBUG(3, "GCAL gc_ Calendar ID was not set")
         return
      end
      GC.newCalendarID = trimString(lul_settings.new_gc_CalendarID)
      DEBUG(3,"User input Calendar ID = " .. lul_settings.new_gc_CalendarID)
      parseCalendarID(GC.newCalendarID)
      GC.interrupt = GC.interrupt + 1
      GCalTimer(json.encode({"manual", "", GC.interrupt}))
     </run>
  </action>
  </actionList>
</implementation>
